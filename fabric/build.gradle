apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "com.modrinth.minotaur"
apply plugin: "fabric-loom"

sourceCompatibility = JavaLanguageVersion.of(java_version as int)
targetCompatibility = JavaLanguageVersion.of(java_version as int)

archivesBaseName = archives_base_name + "-fabric"
version = plugin_version
group = maven_group

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = java_version as int
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    relocate "net.dv8tion.jda", "dev.naturecodevoid.voicechatdiscord.shadow.jda"
    relocate "org.concentus", "dev.naturecodevoid.voicechatdiscord.shadow.concentus"
    relocate "org.bspfsystems.yamlconfiguration", "dev.naturecodevoid.voicechatdiscord.shadow.yamlconfiguration"
    relocate "org.yaml.snakeyaml", "dev.naturecodevoid.voicechatdiscord.shadow.snakeyaml"

    archiveBaseName.set(project.archivesBaseName)
    archiveClassifier.set("")
    archiveVersion.set(project.version)

    destinationDirectory = file("${buildDir}/shadow")
}

prepareRemapJar.dependsOn(shadowJar)

remapJar {
    input = shadowJar.archiveFile.get()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modRuntimeOnly "maven.modrinth:simple-voice-chat:fabric-${project.minecraft_version}-${voicechat_api_version}"
    compileOnly "de.maxhenkel.voicechat:voicechat-api:${voicechat_api_version}"

    shadow(implementation("org.bspfsystems:yamlconfiguration:${yaml_configuration_version}"))
    shadow(implementation("com.github.naturecodevoid:JDA-concentus:${jda_concentus_version}"))
    shadow(implementation(project(":common")))
}

repositories {
    mavenCentral()
    maven {
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "https://maven.maxhenkel.de/repository/public" }
    mavenLocal()
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "S1jG5YV5"
    versionName = "[FABRIC] " + project.version
    changelog = '<a href="https://modrinth.com/mod/fabric-api"><img alt="Requires Fabric API" height="56" src="https://cdn.jsdelivr.net/npm/@intergrav/devins-badges@3/assets/cozy/requires/fabric-api_vector.svg" /></a>'
    uploadFile = remapJar
    gameVersions = ["1.19.2", "1.19.3", "1.19.4"]
    debugMode = System.getenv("MODRINTH_DEBUG") != null
    dependencies {
        required.project "simple-voice-chat"
        required.project "fabric-api"
    }
}
